% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_mesh_primitive.R
\name{add_mesh_primitive}
\alias{add_mesh_primitive}
\alias{add_mesh_primitive_method}
\alias{add_mesh_primitive_method,mvdf_obj-method}
\title{Add code to create mesh primitives to a Blender script}
\usage{
add_mesh_primitive(
  script,
  object,
  primitive = "ico_sphere",
  location = NULL,
  ...
)

add_mesh_primitive_method(
  object,
  script,
  primitive = "ico_sphere",
  location = NULL,
  ...
)

\S4method{add_mesh_primitive_method}{mvdf_obj}(
  object,
  script,
  primitive = "ico_sphere",
  location = NULL,
  ...
)
}
\arguments{
\item{script}{The Python script to append the generated code onto.}

\item{object}{An object inheriting from [mvdf_obj] which will be used to
calculate the x, y, and z positions for each primitive. One primitive will be
created for each row of `mvdf(object)`.}

\item{primitive}{The primitive mesh type to create. Most popular options
include "cone", "cube", "cylinder", "ico_sphere", "monkey", and "uv_sphere";
see the official Blender documentation at
\url{https://docs.blender.org/api/blender_python_api_current/bpy.ops.mesh.html}
for a full list of available primitives.}

\item{location}{Either `NULL` (the default) or a vector of strings (in the
format `location=(x, y, z)`) specifying the location for the origin of each
primitive. If `NULL`, this vector will be automatically calculated using the
`x`, `y`, and `z` values in `object`.}

\item{...}{Additional arguments to pass to the primitive creation call. The
available arguments are different for each primitive, and are documented in
the official Blender documentation at
\url{https://docs.blender.org/api/blender_python_api_current/bpy.ops.mesh.html}.}
}
\value{
A length 1 character vector containing the Blender Python script with
code for creating mesh primitives added.
}
\description{
This function generates code that will, when run inside Blender, create mesh
primitives within a scene.
}
