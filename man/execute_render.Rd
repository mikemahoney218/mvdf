% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/execute_render.R
\name{execute_render}
\alias{execute_render}
\title{Execute a Python script in Blender}
\usage{
execute_render(script, blender = NULL, flags = NULL, addons = NULL)
}
\arguments{
\item{script}{The Python script (either as a file path or as a character
vector with length 1) to execute.}

\item{blender}{Path to the Blender executable to execute the Python script.
If `NULL`, the default, uses the first result from `Sys.which("blender")`.}

\item{flags}{Additional command-line arguments to pass to `blender`.}

\item{addons}{A vector of Blender add-ons to enable on the command line.}
}
\value{
A length 1 character vector with the output file path is returned
invisibly if the function can identify the file the Python script saves to.
If the output file can't be identified, returns `NULL`, invisibly.
}
\description{
This function takes a Python script and executes it via the Blender 3D
rendering program. While the intent of this function is to take scripts
generated by `mvdf` and related packages and use them to produce 3D
renderings, neither this function nor Blender validates the script -- so
be careful when executing Python scripts you haven't generated yourself, as
scripts run in Blender have the same filesystem permissions as scripts you
run on the terminal!
}
