% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign.R
\name{setvalues}
\alias{setvalues}
\alias{set_values}
\alias{set_mvdf}
\alias{set_metadata}
\alias{set_appendix}
\title{Set values for objects subclassing `mvdf_obj`}
\usage{
set_values(
  object,
  mvdf = NULL,
  metadata = NULL,
  appendix = NULL,
  newclass = NULL,
  ...
)

set_mvdf(mvdf, object, metadata = NULL, appendix = NULL, newclass = NULL, ...)

set_metadata(
  metadata,
  object,
  mvdf = NULL,
  appendix = NULL,
  newclass = NULL,
  ...
)

set_appendix(
  appendix,
  object,
  mvdf = NULL,
  metadata = NULL,
  newclass = NULL,
  ...
)
}
\arguments{
\item{object}{The object to update.}

\item{mvdf}{The minimum viable data frame required by the S4 class. If `NULL`
(the default), uses the mvdf from `object`.}

\item{metadata}{The metadata to include in the new object. If `NULL`
(the default), uses the metadata from `object`.}

\item{appendix}{The appendix to include in the new object. If `NULL`
(the default), uses the appendix from `object`.}

\item{newclass}{The class of the object to return. If `NULL` (the default),
returns an object of class `class(object)`.}

\item{...}{Any additional arguments used in the constructor function being
called.}
}
\value{
An S4 object (of class `newclass` if specified or `class(object)` if
not) with updated values.
}
\description{
This function returns a new object of the same class as `object` with updated
values. Use it as a convenient, pipe-able way to set values for
objects subclassing `mvdf_obj`.
}
