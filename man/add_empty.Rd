% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_empty.R
\name{add_empty}
\alias{add_empty}
\alias{add_empty_method}
\alias{add_empty_method,mvdf_obj-method}
\title{Add code to create empties to a Blender script}
\usage{
add_empty(script, object, type = "PLAIN_AXES", location = NULL, ...)

add_empty_method(object, script, type = "PLAIN_AXES", location = NULL, ...)

\S4method{add_empty_method}{mvdf_obj}(object, script, type = "PLAIN_AXES", location = NULL, ...)
}
\arguments{
\item{script}{The Python script to append the generated code onto.}

\item{object}{An object inheriting from [mvdf_obj] which will be used to
calculate the x, y, and z positions for each primitive. One primitive will be
created for each row of `mvdf(object)`.}

\item{type}{The empty type to create. Options include 'PLAIN_AXES', 'ARROWS',
'SINGLE_ARROW', 'CIRCLE', 'CUBE', 'SPHERE', 'CONE', and 'IMAGE'.}

\item{location}{Either `NULL` (the default) or a vector of strings (in the
format `location=(x, y, z)`) specifying the location for the origin of each
empty. If `NULL`, this vector will be automatically calculated using the
`x`, `y`, and `z` values in `object`.}

\item{...}{Additional arguments to pass to the empty creation call.}
}
\value{
A length 1 character vector containing the Blender Python script with
code for creating mesh primitives added.
}
\description{
This function generates code that will, when run inside Blender, create
empties within a scene. See the official Blender documentation at
\url{https://docs.blender.org/api/blender_python_api_current/bpy.ops.object.html}
for a full list of available options.
}
